```{r}
library(tidyverse)
library(missMethods)
library(quantreg)
```

```{r}
#initial data generation

set.seed(2025)

#skewed distribution for imputation testing
my_data <- data.frame(
  original_data = rf(1000, 6, 4)) #can change to any other distribution: try F and gamma?

#rchisq(1000, df = 5)
#rgamma(1000, 4, rate = 3)
#rf(1000, 6, 4)

ggplot(data = my_data, aes(x=original_data)) +
  geom_density()
```

```{r}
#mechanism to make missing data (from https://cran.r-project.org/web/packages/missMethods/vignettes/Generating-missing-values.html)

make_missing <- delete_MCAR(my_data, 0.5, "original_data") #half the data is gone now
```

```{r}
#the algorithm to impute missing completely at random values

imputation_process <- function(full_data) {
  suppressWarnings({ #thanks stackexchange
    unif_value <- round(runif(1, min = 0, max = 1), 2) #sample from Unif(0,1) and round to hundredths
    quant_reg_coeff <- rq(original_data ~ 1, data = full_data, tau=unif_value) #why is this 1?
    value <- coef(quant_reg_coeff)[1]
  })
  return(value)
}
```

```{r}
#then perform the algorithm on make_missing: edit later to make this better in R... purrr?
for (i in 1:nrow(make_missing)) {
  if (is.na(make_missing$original_data[i])) {
    quantile_value <- imputation_process(my_data) #from basis dataset
    make_missing$imputed_data[i] <- quantile_value
  }
  else {
    make_missing$imputed_data[i] <- make_missing$original_data[i]
  }
}
```

```{r}
#now doing some base R binding stuff
my_data <- my_data |>
  mutate(type = "original") |>
  rename(data = "original_data")

make_missing <- make_missing |>
  select(imputed_data) |>
  rename(data = "imputed_data") |>
  mutate(type = "imputed")

#now making the plots! it works!
comparison <- rbind(my_data, make_missing)
rm(my_data)
rm(make_missing)

#the plot: the imputation technique works!
ggplot(comparison, aes(data, fill = type)) + 
  geom_density(alpha = 0.2)
```
